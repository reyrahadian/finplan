@using FinPlan.Web.ViewComponents.Account
@model FinPlan.Web.Models.Account.AccountViewModel

@{
	ViewBag.Title = "Account View";
	Layout = "_Layout";
}

<h2>@Model.Account.Name</h2>
<partial name="_MessagePartial" />
<div>
	<table border="1px">
		<thead>
			<tr>
				<th>Debit</th>
				<th>Credit</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>@Model.TotalDebit.ToString("C2")</td>
				<td>@Model.TotalCredit.ToString("C2")</td>
			</tr>
		</tbody>
	</table>
</div>
<div>
	<a asp-controller="Account" asp-action="CreateTransaction" asp-route-accountId="@Model.Id">Create Transaction</a> |
	<a asp-controller="Account" asp-action="ImportBankStatement" asp-route-id="@Model.Id">Import Bank Statement</a> |
	<a asp-controller="Account" asp-action="Edit" asp-route-id="@Model.Id">Edit Account</a> |
	<a asp-controller="Account" asp-action="Delete" asp-route-id="@Model.Id">Delete Account</a>
</div>
<div>
	<form asp-controller="Account" asp-action="AccountView" method="get">
		<input asp-for="SearchKeyWord" placeholder="Enter a keyword" />
		<button type="submit">Search</button>
		@if (Model.PaginatedTransactions.Result.Any())
		{
			<input name="page" type="hidden" />
			<div>
				@if (Model.PaginatedTransactions.HasPreviousPage())
				{
					<button type="submit" onclick="setPageIndex(@(Model.PaginatedTransactions.PageIndex - 1))">Previous</button>
				}
				@if (Model.PaginatedTransactions.HasNextPage())
				{
					<button type="submit" onclick="setPageIndex(@(Model.PaginatedTransactions.PageIndex + 1))">Next</button>
				}
			</div>
		}
	</form>
</div>
@if (Model.PaginatedTransactions.Result.Any())
{
	<div class="alert alert-info">
		Displaying @Model.PaginatedTransactions.Result.Count of @Model.PaginatedTransactions.TotalRecords
	</div>
	@await Component.InvokeAsync(nameof(TransactionListing), new { transactions = Model.PaginatedTransactions.Result, showActionButtons = true })
}

@section scripts
	{
	<script type="text/javascript">
		function setPageIndex(pageIndex) {
			$('input[name="page"]').val(pageIndex);
		}
	</script>
}
